class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head = None
    def is_empty(self):
        return self .head is None
    def append(self,data):
        new_node= Node(data)
        if self.head is None:
            self.head = new_node
            return
        current=self.head
        while current.next:
            current=current.next
        current.next = new_node
    def prepend(self,data):
        new_node= Node(data)
        new_node.next= self.head
        self.head= new_node
    def delete(self,data):
        if self.head is None:
            return
        if self.head== data:
            self.head= self.head.next
            return
        current = self.head
        while current.next:
            if current.next.data == data:
                current.next= current.next.next
                return
            current=current.next
    def search(self,data):
        current= self.head
        while current:
            if current.data==data:
                return True
            current=current.next
        return False
    def display(self):
        current= self.head
        while current:
            print(current.data, end = " ->")
            current = current.next
        print("None")
l=LinkedList()
l.append(1)
l.append(2)
l.append(3)
print("Linked list : ")
l.display()
l.prepend(0)
l.prepend(-1)
print("Linked list after prepend: ")
l.display()
l.delete(0)
l.delete(3)
print("Linked list after deletion  : ")
l.display()
print("Search for 1 : ", l.search(1))
print("Search for 5 : " ,l.search(5))
        
      Output:
Linked list : 
1 ->2 ->3 ->None
Linked list after prepend: 
-1 ->0 ->1 ->2 ->3 ->None
Linked list after deletion  : 
-1 ->1 ->2 ->None
Search for 1 :  True
Search for 5 :  False

        
        
        
        
        
        
        
            
